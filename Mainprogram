##functions




# pull temp data from observation
def obsfinder():
    messtext=data.text
    observations = messtext.split('<tr class="second_tr">')[1].lstrip().split('</tbody>')[0]



        
    for i in range (1,13):
        selectmonth = observations.split('<td nowrap>')[i].lstrip().split('</tr>')[0]
        
        
       ###insert here
        extractdate = selectmonth.split('<td nowrap>')[0].lstrip().split('</td>')[0]
        extractTemp = selectmonth.split('<td>')[7].lstrip().split('&nbsp;</td>')[0]
        extractTmax = selectmonth.split('<td>')[8].lstrip().split('&nbsp;</td>')[0]
        

 
    
    
        obsdata["Date"].append(Y+ extractdate)
        obsdata["Temp"].append(extractTemp)
        obsdata["Tmax"].append(extractTmax)

    



## end of functions











## Start the execution

# 1.input the link from CWB eg: https://e-service.cwb.gov.tw/HistoryDataQuery/YearDataController.do?command=viewMain&station=466920&stname=%25E8%2587%25BA%25E5%258C%2597&datepicker=1997
Link = str(input("Enter station link without the Year at the end. Sample: https://e-service.cwb.gov.tw/HistoryDataQuery/YearDataController.do?command=viewMain&station=466920&stname=%25E8%2587%25BA%25E5%258C%2597&datepicker="))

import requests  
obsdata={"Date":[],"Temp":[],"Tmax":[]}

for Year in range (1996,1997):
    Y = str(Year)
    url = Link + Y
    data = requests.get(url)
    obsfinder()







# record into Dataframe
import pandas as pd
DateTempTmax=pd.DataFrame(obsdata)
DateTempTmax




# 4.1 Create csv files to the Directory 

DateTempTmax.to_csv (r'\Users\DateTempTmax.csv', index = True, header=True)





# 4.2 Create a download link
# Define functions to download as CSV or Excel
from IPython.display import HTML
import pandas as pd
import base64, io


# Downloadink of the CSVs
def createlink():  
    # generate Temp record
    extractlocation = data.text.split('encodeURI("')[1].lstrip().split('")')[0]
    filename= extractlocation+'DateTempTmax.csv'
    downloadtitle="Download my data of: " + filename
    csv = DateTempTmax.to_csv(index=True)
    b64 = base64.b64encode(csv.encode())
    payload = b64.decode()
    html = '<a download="{filename}" href="data:text/csv;base64,{payload}" target="_blank">{title}</a>'
    html1 = html.format(payload=payload,title=downloadtitle,filename=filename)


    
    return HTML(html1)



# Show the download links
createlink()
